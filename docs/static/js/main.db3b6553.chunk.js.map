{"version":3,"sources":["componentes/AddCategory.js","componentes/GifGridItem.js","helpers/getGifs.js","componentes/GifGrid.js","hooks/useFetchGifs.js","componentes/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","searchEndPoint","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","href","rel","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAfc,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,QAenBG,YAAY,sC,QCnBPC,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACD,mCACQ,uCACd,GAERC,EALe,UAEO,uCAFP,cAK8BC,UACjDH,GANmB,kBAGP,GAHO,oBACD,oCADC,SAQGI,MAAMF,GART,cAQfG,EARe,gBASEA,EAAUC,OATZ,uBASbC,EATa,EASbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QAdjB,kBAkBda,GAlBc,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAExB,ECJ0B,SAACA,GAC3B,MAA0BtB,mBAAS,CACjC6B,KAAM,GACNO,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDX2BK,CAAapB,GAAjCW,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIlB,UAAU,oCAAd,SAAmDI,IAClDc,GACC,mBAAGlB,UAAU,mCAAb,wBAEF,qBAAKA,UAAU,YAAf,SACGe,EAAOF,KAAI,SAACY,GAAD,OACV,cAAC,EAAD,eAAgCA,GAAdA,EAAM5B,aEbrB6B,EAAe,WAE1B,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAKA,OACE,sBAAKmB,UAAU,YAAf,UACE,8CACA,+DACiC,IAC/B,mBACE4B,KAAK,gCACLlC,OAAO,SACPmC,IAAI,aAHN,0BAFF,OAWA,cAAC,EAAD,CAAahD,cAAeA,IAC5B,uBACA,6BACG8C,EAAWd,KAAI,SAACiB,GAAD,OAEd,aADA,CACC,EAAD,CAAmB1B,SAAU0B,GAAfA,Y,MCzBxBC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.db3b6553.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState('');\r\n  const inputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setinputValue('');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={inputChange}\r\n        placeholder='Busca un gif y pulsta intro...'\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  const giphyApiKey = '1yXTHElz01qs8MwUzaTpOx5DYV5E0QxT';\r\n  const giphySearchEndPoint = 'https://api.giphy.com/v1/gifs/search';\r\n  const limit = 10;\r\n\r\n  const searchEndPoint = `${giphySearchEndPoint}?q=${encodeURI(\r\n    category\r\n  )}&limit=${limit}&api_key=${giphyApiKey}`;\r\n  const respuesta = await fetch(searchEndPoint);\r\n  const { data } = await respuesta.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  //getGifs();\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n      {loading && (\r\n        <p className='animate__animated animate__flash'>Loading...</p>\r\n      )}\r\n      <div className='card-grid'>\r\n        {images.map((image) => (\r\n          <GifGridItem key={image.id} {...image} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  //const categories = ['Categoría 1', 'Categoría 2', 'Categoría 3'];\r\n  const [categories, setCategories] = useState(['one punch']);\r\n\r\n  // const anadirCategoria = () => {\r\n  //   setCategories([...categories, 'Categoría 4']);\r\n  // };\r\n  return (\r\n    <div className='container'>\r\n      <h1>GifExpertApp</h1>\r\n      <p>\r\n        Buscador de gifs utilizando el{' '}\r\n        <a\r\n          href='https://developers.giphy.com/'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n        >\r\n          API de Giphy\r\n        </a>\r\n        .\r\n      </p>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ul>\r\n        {categories.map((cat) => (\r\n          //return <li key={cat}>{cat}</li>;\r\n          <GifGrid key={cat} category={cat} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './componentes/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}